var template_loader = require('./../loader/template');

module.exports = function (err, content, env, on_render) {
    var action = this;
    var context = action.context;

    function _on_layout_render(err, templated_content) {
        if (err) {
            on_render(null, content +
                '<p><b>Error: cannot find layout </b></p>'); // note this is the ORIGINAL unfomratted content.
        } else {
            //   console.log('content recieved: %s', content);
            //   console.log('_on_content::app_callback: %s', app_callback.toString());
            on_render(null, templated_content);
        }
    }

    if (err) {
        return action.error(env, {err:err, type:'render_error' }, app_callback);
    } else if (action.hasOwnProperty('layout')) {
        action.layout(env, content, _on_content);
    } else if (action.hasOwnProperty('layout_template')) {
        if (!action.hasOwnProperty('_layout_template')) {
            action._layout_template = template_loader(action.layout_template, context);
        }
        action._layout_template.render(env, content, _on_layout_render, action);

    } else if (action.controller.hasOwnProperty('layout')) {
        action.controller.layout(env, content, _on_content, action);
    } else if (action.controller.hasOwnProperty('layout_template')) {
        if (!action.controller.hasOwnProperty('_layout_template')) {
            action.controller._layout_template = template_loader(action.controller.layout_template, context);
        }
        action.controller._layout_template.render(env, content, _on_layout_render, action);
    } else {
        on_render(null, content);
    }
}