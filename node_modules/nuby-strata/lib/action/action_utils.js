var path = require('path');
var strata = require('./../../node_modules/strata');
var _ = require('./../../node_modules/underscore');
var util = require('util');

module.exports = {

    update_action:function (action) {
        module.exports.ensure_view_path(action);
        module.exports.render_by_ct(action);
        module.exports.error_by_ct(action);
        module.exports.can_by_ct(action);
    },

    add_layout:function (action) {
        action.layout = _layout;
    },

    ensure_view_path:function (action) {
        if (!action._view_path) {
            action._view_path = action.path + '/view.html';
        }
    },

    render_by_ct:function (action) {
        if (action.render_by_ct) {
            _privatize(action, 'render');
            action.render = _render_by_ct;
        }
    },

    error_by_ct:function (action) {
        if (action.error_by_ct) {
            _privatize(action, 'error');
            this.error = _error_by_ct;
        }
    },

    can_by_ct:function (action) {
        if (action.can_by_ct) {
            _privatize(action, 'can');
            action.can = _controller_can;
        }
    }
}


function _controller_can(task, env, if_can, if_block) {
    this.controller.can(task, env, if_can, if_block);
}

function _layout(env, out, callback) {
    env._action = this;
    this.context.layout(env, this._layout_path, out, callback);
}


function _privatize(action, token) {
    if (action.hasOwnProperty(token)) {
        action['_' + token] = action[token];
        delete action[token];
    }
}

function _render_by_ct(params, callback) {
    params._action = this;
    this.controller.render(this._view_path ? this.view_path : '', params, callback, this);
}

function _error_by_ct(params, callback) {
    params._action = this;
    this.controller.error(params, callback, this);
}