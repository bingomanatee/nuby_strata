var fs = require('fs');
var path = require('path');
var _ = require('underscore');
var util = require('util');
var ondir = require('./../../support/ondir');

/**
 * DEFAULT LOADER: handles a basic controller handler.
 */
module.exports = {

    load_actions:function (controller, callback, context, app) {
        var nuby_strata = require('./../..');
      //  console.log('load_actions nuby strata path %s', path.resolve(__dirname, './../..'));
       // console.log('nuby_strata: %s', util.inspect(nuby_strata, false, 0));
        var action_path = controller.path + '/actions';

        function _on_dir(action_item_path, ondir_callback) {
            var action_config = require(action_item_path);
          //  console.log('path: %s, action_config: %s', action_item_path, util.inspect(action_config));
            if (action_config.hasOwnProperty('custom_action')) {
                action = action_config;
            } else {
                var action = nuby_strata.action.create(controller, action_item_path, action_config);
            }

            action.context = context;
            action.controller = controller;

          //  console.log('default loader: loading action %s: %s', action_item_path, util.inspect(action, false, 0));


            if (!action.hasOwnProperty('actions')) {
                controller.actions = {};
            }
            controller.actions[action.name] = action;

            if (!(action.handle && (typeof action.handle == 'function'))) {
                throw new Error(util.format('%s: action %s has no function "handle"', __dirname, app_path));
            }

            if (action.hasOwnProperty('get_route')) {
           //     console.log('getting route from function');
                var route = action.get_route();
            } else {
                var route = '/' + controller.name + '/' + action.name;
            }

        //    console.log('adding handler to route ', route);

            app.route(route, action.handle(), ['GET', 'POST']);
            app.route(route + '.:format', action.handle('format'), ['GET', 'POST']);
            ondir_callback();
        }

        ondir(action_path, callback, null, _on_dir);


        if (!path.existsSync(action_path)) {
            throw new Error(util.format('%s: cannot find action path %s', __dirname, action_path));
        }

    }
}