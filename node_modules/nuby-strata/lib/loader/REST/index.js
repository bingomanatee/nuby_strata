var fs = require('fs');
var path = require('path');
var _ = require('underscore');

var util = require('util');
var ondir = require('./../../support/ondir');

/**
 * DEFAULT LOADER: handles a basic controller handler.
 */
module.exports = {

    load_actions:function (controller, callback, app) {
        var nuby_strata = require('./../..');
        //  console.log('load_actions nuby strata path %s', path.resolve(__dirname, './../..'));
        // console.log('nuby_strata: %s', util.inspect(nuby_strata, false, 0));



        _load_rest_action(app, 'get', controller);
        _load_rest_action(app, 'edit', controller);


    }
}

function _load_rest_action(app, name, controller) {
    var action_path = controller.path + '/actions' + '/' + name;
    var action_file = action_path + '/index.js'
    if (path.existsSync(action_file)) {
        var action_config = require(action_path);
        var action;
        if (action_config.hasOwnProperty('custom_action')) {
            console.log('custom %s action', name);
            action = action_config;
        } else {
            var loader_path = path.resolve(__dirname, '../../action/REST/' + name);
           // console.log('loader path for %s is %s', name, loader_path);
            var action_class = require(loader_path);
          //  console.log(' ------- CREATING %s ------- ', name);
            action = action_class.create(controller, action_config, action_path);
          //  console.log(' ------- DONE %s ------- ', name);
        }

        if (action.hasOwnProperty('get_route')) {
            get_route = action.get_route;
        }
        var routes = _rest_routes(name, controller.name);

        routes.forEach(function (action_route) {
            var route_path = action_route.path;
            console.log('routing for %s::%s', route_path, action_route.method);
            app.route(route_path, action.handle(action_route.type), action_route.method);
        });
    }
    else {
        console.log('no %s path %s', name, action_file);
    }
}


function _rest_routes(name, basename) {

    switch (name) {
        case 'get':
            return [
                {method:'GET',
                    type:'',
                    path:util.format('/%s/:id', basename)
                },
                {method:'GET',
                    type:'format',
                    path:util.format('/%s/:id\\.:format', basename)
                }

            ];
            break;

        case 'edit':
            return [
                {method:'GET',
                    type:'form',
                    path:util.format('/%s/:id/edit', basename)
                },
                {method:'POST',
                    type:'',
                    path:util.format('/%s/:id', basename)
                },
                {method:'POST',
                    type:'format',
                    path:util.format('/%s/:id\\.:format', basename)
                }
            ]
    }
    /*
     var get_path = app_path + '/actions/get';
     if (path.existsSync(get_path)) {
     var action = require(get_path);
     app.get('/' + name + '/:id', action.handle(app_config));
     app.get('/' + name + '/:id.:format', action.handle(app_config, 'format'));
     }

     var list_path = app_path + '/actions/list';
     if (path.existsSync(list_path)) {
     var action = require(list_path);
     app.get('/' + name, action.handle(app_config, 'format'));
     app.get('/' + name + '.:format', action.handle(app_config, 'format'));
     }

     var new_path = app_path + '/actions/new';
     if (path.existsSync(new_path)) {
     var action = require(new_path);
     app.get('/' + name + '/new', action.handle(app_config, 'form'));
     app.post('/' + name, action.handle(app_config));
     app.post('/' + name + '.:format', action.handle(app_config, 'format'));
     }

     var edit_path = app_path + '/actions/edit';
     if (path.existsSync(edit_path)) {
     var action = require(edit_path);
     app.get('/' + name + '/:id/edit', action.handle(app_config, 'form'));
     app.put('/' + name + '/:id', action.handle(app_config));
     app.post('/' + name + '/:id/update', action.handle(app_config));
     app.post('/' + name + '/:id.:format', action.handle(app_config, 'format'));
     }

     var del_path = app_path + '/actions/del';
     if (path.existsSync(del_path)) {
     var action = require(del_path);
     app.del('/' + name + '/:id', action.handle(app_config));
     app.get('/' + name + '/:id/delete', action.handle(app_config, 'form'));
     app.post('/' + name + '/:id/delete', action.handle(app_config));
     }
     */
}