var mock = require('./../node_modules/strata/lib/mock.js');
var util = require('util');
var app_maker = require('./../test_resources/simple_server/app.js');
var model = require('./../test_resources/simple_server/apps/rest_path/model.js');
var item;
var context;
var env;
var new_item;
var strata = require("./../node_modules/strata");
var BufferedStream = require("./../node_modules/strata/node_modules/bufferedstream");


module.exports = {
    setUp:function (setup_callback) {
        new_item = {id:1, name:'dava'};

        var content = JSON.stringify(new_item);
        var contentLength = Buffer.byteLength(content).toString(10);
        var serverName = "example.org";
        var env_data = {protocol:"http:",
            protocolVersion:"1.1",
            requestMethod:"POST",
            requestTime:new Date,
            remoteAddr:"127.0.0.1",
            serverName:serverName,
            serverPort:"443",
            pathInfo:"/rest_path/1",
            userAgent:"test suite",
            headers:{
                "Host":serverName,
                "User-Agent":this.userAgent,
                "Content-Length":this.contentLength
            },
            input:new BufferedStream(content)
        };

        env = strata.env(env_data);


        app_maker(function (err, context) {
            context = context;
            app = context.app;
            //  console.log('setup done; app = %s', util.inspect(app));
            setup_callback();
        });

    },

    test_edit:function (test) {

        mock.request(env, app, function (err, status, headers, body) {
            // _echo(err, status, headers, body);

            var content_type = 'application/json';
            var content = JSON.stringify(new_item);
            test.equals(body, content, 'body should equal ' + content);
            test.equals(headers['Content-Type'], content_type,
                'content-type should equal ' + content_type);

            model.get_id(new_item.id, function (err, item_1) {
                test.equals(item_1.name, new_item.name);
                test.done();

            });
        })

    }
}