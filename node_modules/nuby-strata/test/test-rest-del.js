var mock = require('./../node_modules/strata/lib/mock.js');
var util = require('util');
var app_maker = require('./../test_resources/simple_server/app.js');
var model = require('./../test_resources/simple_server/apps/rest_path/model.js');
var item;
var app;

module.exports = {
    setUp:function (setup_callback) {
        model.reset();
        app_maker(function (err, context) {
            app = context.app;
            //  console.log('setup done; app = %s', util.inspect(app));
            model.insert({name: "to_delete"}, function (err, new_item) {
                console.log('item to delete = %s', util.format(new_item));
                item = new_item;
                setup_callback();
            });
        });
    },

    test_get:function (test) {

        mock.request(util.format('/rest_path/%s/destroy.json', item.id), app, function (err, status, headers, body) {
            // _echo(err, status, headers, body);

            var content_type = 'application/json';
            var content = JSON.stringify({rest_path:item});
            test.equals(body, content, 'body should equal ' + content);
            test.equals(headers['Content-Type'], content_type,
                'content-type should equal ' + content_type);
            model.get_id(item.id, function (err, item_1) {
                test.ok(err, 'find after delete is error');
                test.done();
            });
        })
    }
}

function _echo(err, status, headers, body) {
    console.log('err: ', util.inspect(err));
    console.log('status', util.inspect(status));
    console.log('headers', util.inspect(headers));
    console.log('body', util.inspect(body));
}